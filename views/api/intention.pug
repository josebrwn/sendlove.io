extends ../layout
block content
  style.
    #map {
      height: 60vh;
    }
  .page-header
    h2
      a(href='/api/map')
        i.fa.fa-map-marker
      | #{title} - SendLove.io

  .btn-group.btn-group-justified
    a.btn.btn-primary(href='/api/new_intention')
      i.fa.fa-share
      | New!
    a.btn.btn-primary(href='http://www.facebook.com/sharer/sharer.php?u='+shareUrl, target='_blank')
      i.fa.fa-facebook
      | Facebook
    a.btn.btn-primary(href='https://twitter.com/intent/tweet?text='+shareUrl+'+@sendloveio', target='_blank')
      i.fa.fa-twitter
      | Twitter
  br
  - if (user != undefined)
    p <a href="/api/intention/#{token}"><b>Intention</b></a> > <a href="/api/map">Map</a> > <a href="/api/feed">Feed</a>
  - else
    p <a href="/api/intention/#{token}"><b>Intention</b></a> > <a href="/api/map">Map</a> > <a href="/api/feed">Feed</a>
  br

  .row
    .col-xs-11.col-sm-10.col-md-9.col-lg-8
      h3=title

    .col-xs-2
      //- figure out if this person has liked this thing
      if (user != undefined)
        - for (i in likesArray) {
            - if (likesArray[i].personId == user._id) {
              - userLikes += likesArray[i].nValue;
            - }
        - }
      //- p #{userLikes}
      //- p #{user._id}
      a(class="like-button", href="")
        - if (likesArray != undefined)
          - if (likesArray[0] != undefined) //- the array exists and is populated
            - if (user != undefined)
              - if (userLikes > 0)
                img(class="like-image", src="http://sendloveio.imgix.net/heart_40_35.gif", height="20" valign="bottom", title="liked!")
              - else
                img(class="like-image", src="http://sendloveio.imgix.net/heart_40_35_gray.gif", height="20" valign="bottom", title="log in to like!")
            - else
              img(class="like-image", src="http://sendloveio.imgix.net/heart_40_35_gray.gif", height="20" valign="bottom", title="log in to like!")
          - else
            img(class="like-image", src="http://sendloveio.imgix.net/heart_40_35_gray.gif", height="20" valign="bottom", title="log in to like!")
        - else
          img(class="like-image", src="http://sendloveio.imgix.net/heart_40_35_gray.gif", height="20" valign="bottom", title="log in to like!")
      p &nbsp;#{likesCount}

  .row
    .col-xs-11.col-sm-10.col-md-9.col-lg-8
      a(href=imagePath)
        img(class='img-thumbnail', title=title, src=imagePath+"?h=500&auto=format,enhance&q=90", id='theImage')
      blockquote(style='overflow:hidden;white-space:pre-wrap;text-overflow:ellipsis;')=description
      i=userName
      br
      i=updatedAt
      br
      a(href='/api/map?category=' + category) #{category}

  .row
    .col-xs-11.col-sm-10.col-md-9.col-lg-8
      br
      if latitude != undefined
        #map

  .row
    .col-xs-11.col-sm-10.col-md-9.col-lg-8
      form(role='form', method='POST')
        br
        input(type='hidden', name='_csrf', value=_csrf)
        - if (user != undefined)
          input(type='hidden', name='personId', value=user.id)
        input(type='hidden', name='thingId', value=token)
        input(type='hidden', name='partType', value='comment')
        .form-group
          .input-group
            label.control-label Say Hi :)
            textarea.form-control(name='description',  cols='35', rows='3', placeholder='Share a nice thought!', required=true)
        .form-group
          .input-group
            button.btn.btn-default(type='submit', class='reply-button')
              i.fa.fa-location-arrow
              | Send

  .row
    .col-xs-11.col-sm-10.col-md-9.col-lg-8
      h4
        i Replies
      for comment in commentsArray
        .row
          .col-xs-10.col-md-8
            blockquote(style='white-space:pre-wrap;background: #f9f9f9;font-size: 12px; ')
              |  #{comment.description}
              |  --
              |  #{comment.userName}
              |  #{comment.updatedAt}

  .row
    .col-xs-11.col-sm-10.col-md-9.col-lg-8
    hr
    //- pre(id='allMetaDataSpan')




  // put jquery before scripts that use it
  script(src="/js/jquery/jquery.min.js")

  //- exif.js is an npm module used for image orientation. todo getelementbytagname=img
  //- script(src="/js/exif.js")
  //- script(src="/js/load-image.all.min.js")
  //- script.
  //-   document.write("<script type='text/javascript' src='/js/rotate-image.js?" + Date.now() + "'><\/script>");

  //- this is the simple way of making a local available to client javascript.
  script(type='text/javascript').
    var locations =!{JSON.stringify(mapLocations)}


  - if (user != undefined)
    script(type='text/javascript').
      var user =!{JSON.stringify(user._id)}
    script(type='text/javascript').
      var likes  =!{JSON.stringify(likesArray)}

  script(type='text/javascript').
    var csrf =!{JSON.stringify(_csrf)}

  //- in development append a pseudo version number so that the javascript always reloads.
  script.
    document.write("<script type='text/javascript' var locations=locals.mapLocations src='/js/intention.js?" + Date.now() + "'><\/script>");

  script( async defer src='https://maps.googleapis.com/maps/api/js?key=' + locals.mapKey + '&libraries=visualization&callback=initMap')
